{
  "settings_version": "0.17.0",
  "debug": false,
  "obsidian_command_palette_prefix": "Execute: ",
  "preview_variables_in_command_palette": true,
  "show_autocomplete_menu": true,
  "working_directory": "",
  "default_shells": {
    "win32": "pwsh.exe"
  },
  "environment_variable_path_augmentations": {},
  "error_message_duration": 20,
  "notification_message_duration": 10,
  "execution_notification_mode": "if-long",
  "output_channel_clipboard_also_outputs_to_notification": true,
  "enable_events": true,
  "approve_modals_by_pressing_enter_key": true,
  "max_visible_lines_in_shell_command_fields": false,
  "shell_commands": [
    {
      "alias": "Git GUI",
      "confirm_execution": false,
      "ignore_error_codes": [
        259
      ],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "git-gui"
      },
      "shells": {},
      "events": {},
      "command_palette_availability": "unlisted",
      "preactions": [],
      "variable_default_values": {},
      "icon": null,
      "id": "0",
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_handling_mode": "buffered"
    },
    {
      "alias": "Git Bash",
      "ignore_error_codes": [],
      "confirm_execution": false,
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "start \"\" \"%PROGRAMFILES%\\Git\\bin\\sh.exe\" --login"
      },
      "shells": {
        "win32": "CMD.EXE"
      },
      "events": {},
      "command_palette_availability": "unlisted",
      "preactions": [],
      "variable_default_values": {},
      "icon": null,
      "id": "1",
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_handling_mode": "buffered"
    },
    {
      "alias": "Terminal in test suite folder (Linux) (No need to test)",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "cd \"{{vault_path}}\" && xfce4-terminal"
      },
      "shells": {},
      "events": {},
      "command_palette_availability": "enabled",
      "preactions": [],
      "variable_default_values": {},
      "icon": null,
      "id": "21",
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_handling_mode": "buffered"
    },
    {
      "alias": "Git pull",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "modal",
        "stderr": "modal"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "git pull"
      },
      "shells": {},
      "events": {},
      "command_palette_availability": "unlisted",
      "preactions": [],
      "variable_default_values": {},
      "icon": null,
      "id": "22",
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_handling_mode": "buffered"
    },
    {
      "alias": "Terminal in plugin folder (Linux) (No need to test)",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "platform_specific_commands": {
        "default": "cd \"{{vault_path}}/.obsidian/plugins/obsidian-shellcommands\" && xfce4-terminal"
      },
      "shells": {},
      "events": {},
      "command_palette_availability": "enabled",
      "preactions": [],
      "variable_default_values": {},
      "icon": null,
      "id": "27",
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_handling_mode": "buffered"
    },
    {
      "platform_specific_commands": {
        "default": "git status --short --branch"
      },
      "shells": {},
      "alias": "Git status",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "modal",
        "stderr": "modal"
      },
      "output_channel_order": "stdout-first",
      "events": {},
      "command_palette_availability": "unlisted",
      "preactions": [],
      "variable_default_values": {},
      "icon": null,
      "id": "28",
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_handling_mode": "buffered"
    },
    {
      "platform_specific_commands": {
        "default": "",
        "win32": "C:\\Program` Files\\GIMP` 2\\bin\\gimp-2.10.exe {{event_file_path:absolute}}"
      },
      "shells": {},
      "alias": "Open {{!event_file_name}} in GIMP",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "events": {
        "file-menu": {
          "enabled": true
        }
      },
      "command_palette_availability": "disabled",
      "preactions": [],
      "variable_default_values": {},
      "icon": null,
      "id": "29",
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_handling_mode": "buffered"
    },
    {
      "platform_specific_commands": {
        "default": "python Assets/Scripts/replace-todo-dates.py {{file_path:absolute}} {{_sc_version}} {{_release_date}}",
        "win32": "python Assets/Scripts/replace-todo-dates.py \"{{file_path:absolute}}\" \"{{_sc_version}}\" \"{{_release_date}}\""
      },
      "shells": {},
      "alias": "Replace TODO with a date",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "notification",
        "stderr": "modal"
      },
      "output_channel_order": "stdout-first",
      "events": {},
      "command_palette_availability": "enabled",
      "preactions": [
        {
          "type": "prompt",
          "enabled": true,
          "prompt_id": "4huy5mwqf8"
        }
      ],
      "variable_default_values": {
        "euxjrqgpyh": {
          "type": "value",
          "value": "0..0"
        },
        "fx1gavqiys": {
          "type": "value",
          "value": "{{date:YYYY-MM-DD}}"
        }
      },
      "icon": null,
      "id": "30",
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_handling_mode": "buffered"
    },
    {
      "platform_specific_commands": {
        "default": "echo {{event_file_name}}"
      },
      "shells": {},
      "alias": "Copy {{event_file_name}} to clipboard",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "clipboard",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "events": {
        "file-menu": {
          "enabled": true
        }
      },
      "command_palette_availability": "disabled",
      "preactions": [],
      "variable_default_values": {},
      "icon": null,
      "id": "31",
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_handling_mode": "buffered"
    },
    {
      "platform_specific_commands": {
        "default": "echo {{event_title}}"
      },
      "shells": {},
      "alias": "Copy {{event_title}} to clipboard",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "clipboard",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "events": {
        "file-menu": {
          "enabled": true
        }
      },
      "command_palette_availability": "disabled",
      "preactions": [],
      "variable_default_values": {},
      "icon": null,
      "id": "32",
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_handling_mode": "buffered"
    },
    {
      "platform_specific_commands": {
        "default": "echo {{event_folder_name}}"
      },
      "shells": {},
      "alias": "Copy {{event_folder_name}} to clipboard",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "clipboard",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "events": {
        "folder-menu": {
          "enabled": true
        }
      },
      "command_palette_availability": "disabled",
      "preactions": [],
      "variable_default_values": {},
      "icon": null,
      "id": "33",
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_handling_mode": "buffered"
    },
    {
      "platform_specific_commands": {
        "default": "python3 Assets/Scripts/updateTimestamp.py {{file_path:relative}}"
      },
      "shells": {},
      "alias": "Update file timestamp",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "notification",
        "stderr": "notification"
      },
      "output_channel_order": "stdout-first",
      "events": {},
      "command_palette_availability": "enabled",
      "preactions": [],
      "variable_default_values": {},
      "icon": "clock",
      "id": "34",
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_handling_mode": "buffered"
    },
    {
      "id": "cuepyks12f",
      "platform_specific_commands": {
        "default": "mkdir \"Assets/Images/SC \"{{_sc_version}}\" - Obsidian \"{{_obsidian_version}}\necho \"REMEMBER TO SET AS ATTACHMENT FOLDER\"",
        "win32": "mkdir \"Assets\\Images\\SC {{_sc_version}} - Obsidian {{_obsidian_version}}\" > $null\necho \"REMEMBER TO SET AS ATTACHMENT FOLDER\""
      },
      "shells": {},
      "alias": "New image folder",
      "icon": "folder-plus",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "modal",
        "stderr": "modal"
      },
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_channel_order": "stdout-first",
      "output_handling_mode": "buffered",
      "events": {},
      "command_palette_availability": "enabled",
      "preactions": [
        {
          "type": "prompt",
          "enabled": true,
          "prompt_id": "gihf4kpgsk"
        }
      ],
      "variable_default_values": {}
    },
    {
      "id": "n2py3h2at3",
      "platform_specific_commands": {
        "default": "",
        "win32": " get-clipboard -Format image\n $img = get-clipboard -format image\n $img.save(\"{{event_folder_path:absolute}}\\{{_image_file_name}}\")\n# Copied 2022-12-05 from https://stackoverflow.com/a/55226209/2754026\n# Only works with PowerShell 5, not with newer versions!"
      },
      "shells": {
        "win32": "PowerShell.exe"
      },
      "alias": "Paste image to file",
      "icon": "image",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "ignore",
        "stderr": "modal"
      },
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_channel_order": "stdout-first",
      "output_handling_mode": "buffered",
      "events": {
        "folder-menu": {
          "enabled": true
        }
      },
      "command_palette_availability": "disabled",
      "preactions": [
        {
          "type": "prompt",
          "enabled": true,
          "prompt_id": "k2jniuruaf"
        }
      ],
      "variable_default_values": {}
    },
    {
      "id": "95rhxothbj",
      "platform_specific_commands": {
        "default": "python3 Assets/Scripts/updateTimestamps.py"
      },
      "shells": {},
      "alias": "Update all files' timestamps",
      "icon": "clock",
      "confirm_execution": false,
      "ignore_error_codes": [],
      "output_channels": {
        "stdout": "modal",
        "stderr": "modal"
      },
      "output_wrappers": {
        "stdout": null,
        "stderr": null
      },
      "output_channel_order": "stdout-first",
      "output_handling_mode": "buffered",
      "events": {},
      "command_palette_availability": "enabled",
      "preactions": [],
      "variable_default_values": {}
    }
  ],
  "prompts": [
    {
      "id": "4huy5mwqf8",
      "title": "SC version and release date",
      "description": "",
      "preview_shell_command": false,
      "fields": [
        {
          "label": "Shell commands plugin version",
          "description": "",
          "default_value": "{{_sc_version}}",
          "target_variable_id": "euxjrqgpyh",
          "required": true
        },
        {
          "label": "Release date",
          "description": "",
          "default_value": "{{_release_date}}",
          "target_variable_id": "fx1gavqiys",
          "required": true
        }
      ],
      "execute_button_text": "Execute"
    },
    {
      "id": "gihf4kpgsk",
      "title": "SC and Obsidian versions",
      "description": "",
      "preview_shell_command": false,
      "fields": [
        {
          "label": "Shell commands plugin version",
          "description": "",
          "default_value": "0.",
          "target_variable_id": "euxjrqgpyh",
          "required": true
        },
        {
          "label": "Obsidian version",
          "description": "",
          "default_value": "1.",
          "target_variable_id": "yvz02tniok",
          "required": true
        }
      ],
      "execute_button_text": "Create folder"
    },
    {
      "id": "k2jniuruaf",
      "title": "Image file name",
      "description": "",
      "preview_shell_command": false,
      "fields": [
        {
          "label": "Image file name",
          "description": "",
          "default_value": ".png",
          "target_variable_id": "iks00t5s4s",
          "required": true
        }
      ],
      "execute_button_text": "Create"
    }
  ],
  "custom_variables": [
    {
      "id": "euxjrqgpyh",
      "name": "sc_version",
      "description": "Used in replace-todo-dates.py"
    },
    {
      "id": "fx1gavqiys",
      "name": "release_date",
      "description": "Used in replace-todo-dates.py"
    },
    {
      "id": "yvz02tniok",
      "name": "obsidian_version",
      "description": ""
    },
    {
      "id": "iks00t5s4s",
      "name": "image_file_name",
      "description": ""
    }
  ],
  "output_wrappers": []
}